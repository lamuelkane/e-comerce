import React from 'react';
import clsx from 'clsx';
import { makeStyles } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Box from '@material-ui/core/Box';
import Typography from '@material-ui/core/Typography';
import Container from '@material-ui/core/Container';
import Grid from '@material-ui/core/Grid';
import Paper from '@material-ui/core/Paper';
import Link from '@material-ui/core/Link';
import Dashboardsidebar from '../components/Dashboardsidebar';
import Dashboardheader from '../components/Dashboardheader';
import Head from 'next/head'
import Button from '@material-ui/core/Button';
import TextField from '@material-ui/core/TextField';
import DeleteIcon from '@material-ui/icons/Delete';
import Avatar from '@material-ui/core/Avatar';


function Copyright() {
  return (
    <Typography variant="body2" color="textSecondary" align="center">
      {'Copyright Â© '}
      <Link color="inherit" href="/">
        Your Website
      </Link>{' '}
      {new Date().getFullYear()}
      {'.'}
    </Typography>
  );
}

const drawerWidth = 240;

const useStyles = makeStyles((theme) => ({
  root: {
    display: 'flex',
  },
  toolbar: {
    paddingRight: 24, // keep right padding when drawer closed
  },
  toolbarIcon: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
    padding: '0 8px',
    ...theme.mixins.toolbar,
  },
  appBar: {
    zIndex: theme.zIndex.drawer + 1,
    transition: theme.transitions.create(['width', 'margin'], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
  },
  appBarShift: {
    marginLeft: drawerWidth,
    width: `calc(100% - ${drawerWidth}px)`,
    transition: theme.transitions.create(['width', 'margin'], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
  },
  menuButton: {
    marginRight: 36,
  },
  menuButtonHidden: {
    display: 'none',
  },
  title: {
    flexGrow: 1,
  },
  drawerPaper: {
    position: 'relative',
    whiteSpace: 'nowrap',
    width: drawerWidth,
    transition: theme.transitions.create('width', {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
  },
  drawerPaperClose: {
    overflowX: 'hidden',
    transition: theme.transitions.create('width', {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
    width: theme.spacing(7),
    [theme.breakpoints.up('sm')]: {
      width: theme.spacing(9),
    },
  },
  appBarSpacer: theme.mixins.toolbar,
  content: {
    flexGrow: 1,
    height: '100vh',
    overflow: 'auto',
  },
  container: {
    paddingTop: theme.spacing(4),
    paddingBottom: theme.spacing(4),
  },
  paper: {
    padding: theme.spacing(2),
    display: 'flex',
    overflow: 'auto',
    flexDirection: 'column',
  },
  fixedHeight: {
    height: 240,
  },
}));

export default function Dashboard() {
  const classes = useStyles();
  const [open, setOpen] = React.useState(true);
  const handleDrawerOpen = () => {
    setOpen(true);
  };
  const handleDrawerClose = () => {
    setOpen(false);
  };
  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);

  return (
    <div className={classes.root}>
            <Head>
                <title>edit-product</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="./assets/images/logo.jpg" />
            </Head>
      <CssBaseline />
      <Dashboardsidebar />
      <Dashboardheader />
      <main className={classes.content}>
        <div className={classes.appBarSpacer} />
        <Container maxWidth="lg" className={classes.container}>
            <Grid item xs={12}>
              <Paper className={classes.paper}>
                <form action="" className={`flex column`}>
                    <div className={`flex align-center justify-between margin-bottom wrap`}>
                        <TextField id="standard-basic" label="Standard" />
                        <TextField id="standard-basic" label="Standard" />
                        <select name="" id="" className={`padding`}>
                            <option value="">option</option>
                            <option value="">option</option>
                            <option value="">option</option>
                            <option value="">option</option>
                        </select>
                        <input
                            accept="image/*"
                            className={`hide`}
                            id="contained-button-file"
                            multiple
                            type="file" 
                        />
                        <label htmlFor="contained-button-file">
                             <Avatar alt="Cindy Baker" src='./assets/images/post/post19.jpg' />
                        </label>
                    </div>
                    <textarea name="" id="" cols="30" rows="10"></textarea>
                    <div className={`margin-bottom flex wrap column`}>
                        <h3>options</h3>
                        <div  className={`flex align-center wrap padding`}>
                             <TextField id="standard-basic" label="Standard" />
                            <TextField id="standard-basic" label="Standard" />
                            <div className={`margin-top`}>
                              <Button variant="contained" color="secondary" component="span" startIcon={<DeleteIcon />}>
                                  Delete
                              </Button>
                            </div>
                        </div>
                        <div  className={`flex align-center wrap padding`}>
                             <TextField id="standard-basic" label="Standard" />
                            <TextField id="standard-basic" label="Standard" />
                            <div className={`margin-top`}>
                              <Button variant="contained" color="secondary" component="span" startIcon={<DeleteIcon />}>
                                  Delete
                              </Button>
                            </div>
                        </div>
                        <div  className={`flex align-center wrap padding`}>
                             <TextField id="standard-basic" label="Standard" />
                            <TextField id="standard-basic" label="Standard" />
                            <div className={`margin-top`}>
                              <Button variant="contained" color="secondary" component="span" startIcon={<DeleteIcon />}>
                                  Delete
                              </Button>
                            </div>
                        </div>
                    </div>
                    <div className={`margin-bottom flex wrap column`}>
                        <Button variant="contained" color="primary" component="span">
                            Add Option
                        </Button>
                        <div  className={`flex align-center wrap `}>
                             <TextField id="standard-basic" label="Standard" />
                            <TextField id="standard-basic" label="Standard" />
                            <div className={`margin-top`}>
                              <Button variant="contained" color="primary" component="span">
                                  Save Option
                              </Button>
                            </div>
                        </div>
                    </div>
                </form>
              </Paper>
            </Grid>
          <Box pt={4}>
            <Copyright />
          </Box>
        </Container>
      </main>
    </div>
  );
}